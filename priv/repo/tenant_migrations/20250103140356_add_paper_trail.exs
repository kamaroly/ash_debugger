defmodule AshDebugger.Repo.TenantMigrations.AddPaperTrail do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:ledger_transfers_versions, primary_key: false, prefix: prefix()) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :version_action_type, :text, null: false
      add :version_action_name, :text, null: false

      add :version_source_id,
          references(:ledger_transfers,
            column: :id,
            name: "ledger_transfers_versions_version_source_id_fkey",
            type: :binary,
            prefix: prefix()
          ),
          null: false

      add :changes, :map

      add :version_inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :version_updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:ledger_balances_versions, primary_key: false, prefix: prefix()) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :version_action_type, :text, null: false
      add :version_action_name, :text, null: false

      add :version_source_id,
          references(:ledger_balances,
            column: :id,
            name: "ledger_balances_versions_version_source_id_fkey",
            type: :uuid,
            prefix: prefix()
          ),
          null: false

      add :changes, :map

      add :version_inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :version_updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:ledger_accounts_versions, primary_key: false, prefix: prefix()) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :version_action_type, :text, null: false
      add :version_action_name, :text, null: false

      add :version_source_id,
          references(:ledger_accounts,
            column: :id,
            name: "ledger_accounts_versions_version_source_id_fkey",
            type: :uuid,
            prefix: prefix()
          ),
          null: false

      add :changes, :map

      add :version_inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :version_updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end
  end

  def down do
    drop constraint(:ledger_accounts_versions, "ledger_accounts_versions_version_source_id_fkey")

    drop table(:ledger_accounts_versions, prefix: prefix())

    drop constraint(:ledger_balances_versions, "ledger_balances_versions_version_source_id_fkey")

    drop table(:ledger_balances_versions, prefix: prefix())

    drop constraint(
           :ledger_transfers_versions,
           "ledger_transfers_versions_version_source_id_fkey"
         )

    drop table(:ledger_transfers_versions, prefix: prefix())
  end
end
