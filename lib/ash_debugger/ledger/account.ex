defmodule AshDebugger.Ledger.Account do
  use Ash.Resource,
    domain: AshDebugger.Ledger,
    data_layer: AshPostgres.DataLayer,
    notifiers: [Ash.Notifier.PubSub],
    extensions: [AshDoubleEntry.Account, AshPaperTrail.Resource]

  postgres do
    table "ledger_accounts"
    repo AshDebugger.Repo
  end

  account do
    # configure the other resources it will interact with
    transfer_resource(AshDebugger.Ledger.Transfer)
    balance_resource(AshDebugger.Ledger.Balance)
    # accept custom attributes in the autogenerated `open` create action
    open_action_accept([:account_number, :name, :tax_rate])
  end

  paper_trail do
    # default is false
    store_action_name?(true)
  end

  actions do
    default_accept [:account_number, :name, :tax_rate]
    defaults [:read, :update]
  end

  pub_sub do
    module AshDebuggerWeb.Endpoint

    prefix "ledger_accounts"
    publish_all :update, [[:id, nil]]
    publish_all :create, [[:id, nil]]
    publish_all :destroy, [[:id, nil]]
  end

  multitenancy do
    strategy :context
  end

  attributes do
    # Add custom attributes
    attribute :account_number, :string, allow_nil?: false
    attribute :name, :string, allow_nil?: false
    attribute :tax_rate, :decimal, default: 0
  end
end
